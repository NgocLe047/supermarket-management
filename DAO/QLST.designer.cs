#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAO
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLSieuThi")]
	public partial class QLSTDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCTPhieuNhap(CTPhieuNhap instance);
    partial void UpdateCTPhieuNhap(CTPhieuNhap instance);
    partial void DeleteCTPhieuNhap(CTPhieuNhap instance);
    partial void InsertPhieuXuatHang(PhieuXuatHang instance);
    partial void UpdatePhieuXuatHang(PhieuXuatHang instance);
    partial void DeletePhieuXuatHang(PhieuXuatHang instance);
    partial void InsertCTPhieuXuatHang(CTPhieuXuatHang instance);
    partial void UpdateCTPhieuXuatHang(CTPhieuXuatHang instance);
    partial void DeleteCTPhieuXuatHang(CTPhieuXuatHang instance);
    partial void InsertCTHoaDonBanHang(CTHoaDonBanHang instance);
    partial void UpdateCTHoaDonBanHang(CTHoaDonBanHang instance);
    partial void DeleteCTHoaDonBanHang(CTHoaDonBanHang instance);
    partial void InsertDangNhap(DangNhap instance);
    partial void UpdateDangNhap(DangNhap instance);
    partial void DeleteDangNhap(DangNhap instance);
    partial void InsertHangHoa(HangHoa instance);
    partial void UpdateHangHoa(HangHoa instance);
    partial void DeleteHangHoa(HangHoa instance);
    partial void InsertHoaDonBanHang(HoaDonBanHang instance);
    partial void UpdateHoaDonBanHang(HoaDonBanHang instance);
    partial void DeleteHoaDonBanHang(HoaDonBanHang instance);
    partial void InsertKhachHangThanThiet(KhachHangThanThiet instance);
    partial void UpdateKhachHangThanThiet(KhachHangThanThiet instance);
    partial void DeleteKhachHangThanThiet(KhachHangThanThiet instance);
    partial void InsertLoaiHangHoa(LoaiHangHoa instance);
    partial void UpdateLoaiHangHoa(LoaiHangHoa instance);
    partial void DeleteLoaiHangHoa(LoaiHangHoa instance);
    partial void InsertNhaCungCap(NhaCungCap instance);
    partial void UpdateNhaCungCap(NhaCungCap instance);
    partial void DeleteNhaCungCap(NhaCungCap instance);
    partial void InsertNhanVien(NhanVien instance);
    partial void UpdateNhanVien(NhanVien instance);
    partial void DeleteNhanVien(NhanVien instance);
    partial void InsertPhieuNhapHang(PhieuNhapHang instance);
    partial void UpdatePhieuNhapHang(PhieuNhapHang instance);
    partial void DeletePhieuNhapHang(PhieuNhapHang instance);
    #endregion
		
		public QLSTDataContext() : 
				base(global::DAO.Properties.Settings.Default.QLSieuThiConnectionString2, mappingSource)
		{
			OnCreated();
		}
		
		public QLSTDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLSTDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLSTDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLSTDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CTPhieuNhap> CTPhieuNhaps
		{
			get
			{
				return this.GetTable<CTPhieuNhap>();
			}
		}
		
		public System.Data.Linq.Table<PhieuXuatHang> PhieuXuatHangs
		{
			get
			{
				return this.GetTable<PhieuXuatHang>();
			}
		}
		
		public System.Data.Linq.Table<CTPhieuXuatHang> CTPhieuXuatHangs
		{
			get
			{
				return this.GetTable<CTPhieuXuatHang>();
			}
		}
		
		public System.Data.Linq.Table<CTHoaDonBanHang> CTHoaDonBanHangs
		{
			get
			{
				return this.GetTable<CTHoaDonBanHang>();
			}
		}
		
		public System.Data.Linq.Table<DangNhap> DangNhaps
		{
			get
			{
				return this.GetTable<DangNhap>();
			}
		}
		
		public System.Data.Linq.Table<HangHoa> HangHoas
		{
			get
			{
				return this.GetTable<HangHoa>();
			}
		}
		
		public System.Data.Linq.Table<HoaDonBanHang> HoaDonBanHangs
		{
			get
			{
				return this.GetTable<HoaDonBanHang>();
			}
		}
		
		public System.Data.Linq.Table<KhachHangThanThiet> KhachHangThanThiets
		{
			get
			{
				return this.GetTable<KhachHangThanThiet>();
			}
		}
		
		public System.Data.Linq.Table<LoaiHangHoa> LoaiHangHoas
		{
			get
			{
				return this.GetTable<LoaiHangHoa>();
			}
		}
		
		public System.Data.Linq.Table<NhaCungCap> NhaCungCaps
		{
			get
			{
				return this.GetTable<NhaCungCap>();
			}
		}
		
		public System.Data.Linq.Table<NhanVien> NhanViens
		{
			get
			{
				return this.GetTable<NhanVien>();
			}
		}
		
		public System.Data.Linq.Table<PhieuNhapHang> PhieuNhapHangs
		{
			get
			{
				return this.GetTable<PhieuNhapHang>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTPhieuNhap")]
	public partial class CTPhieuNhap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SoPhieuNhap;
		
		private string _MaHang;
		
		private System.Nullable<double> _SoLuongNhap;
		
		private System.Nullable<double> _ThanhTien;
		
		private System.Nullable<double> _DonGiaNhap;
		
		private EntityRef<HangHoa> _HangHoa;
		
		private EntityRef<PhieuNhapHang> _PhieuNhapHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSoPhieuNhapChanging(int value);
    partial void OnSoPhieuNhapChanged();
    partial void OnMaHangChanging(string value);
    partial void OnMaHangChanged();
    partial void OnSoLuongNhapChanging(System.Nullable<double> value);
    partial void OnSoLuongNhapChanged();
    partial void OnThanhTienChanging(System.Nullable<double> value);
    partial void OnThanhTienChanged();
    partial void OnDonGiaNhapChanging(System.Nullable<double> value);
    partial void OnDonGiaNhapChanged();
    #endregion
		
		public CTPhieuNhap()
		{
			this._HangHoa = default(EntityRef<HangHoa>);
			this._PhieuNhapHang = default(EntityRef<PhieuNhapHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoPhieuNhap", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SoPhieuNhap
		{
			get
			{
				return this._SoPhieuNhap;
			}
			set
			{
				if ((this._SoPhieuNhap != value))
				{
					if (this._PhieuNhapHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSoPhieuNhapChanging(value);
					this.SendPropertyChanging();
					this._SoPhieuNhap = value;
					this.SendPropertyChanged("SoPhieuNhap");
					this.OnSoPhieuNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHang", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHang
		{
			get
			{
				return this._MaHang;
			}
			set
			{
				if ((this._MaHang != value))
				{
					if (this._HangHoa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHangChanging(value);
					this.SendPropertyChanging();
					this._MaHang = value;
					this.SendPropertyChanged("MaHang");
					this.OnMaHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongNhap", DbType="Float")]
		public System.Nullable<double> SoLuongNhap
		{
			get
			{
				return this._SoLuongNhap;
			}
			set
			{
				if ((this._SoLuongNhap != value))
				{
					this.OnSoLuongNhapChanging(value);
					this.SendPropertyChanging();
					this._SoLuongNhap = value;
					this.SendPropertyChanged("SoLuongNhap");
					this.OnSoLuongNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhTien", DbType="Float")]
		public System.Nullable<double> ThanhTien
		{
			get
			{
				return this._ThanhTien;
			}
			set
			{
				if ((this._ThanhTien != value))
				{
					this.OnThanhTienChanging(value);
					this.SendPropertyChanging();
					this._ThanhTien = value;
					this.SendPropertyChanged("ThanhTien");
					this.OnThanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGiaNhap", DbType="Float")]
		public System.Nullable<double> DonGiaNhap
		{
			get
			{
				return this._DonGiaNhap;
			}
			set
			{
				if ((this._DonGiaNhap != value))
				{
					this.OnDonGiaNhapChanging(value);
					this.SendPropertyChanging();
					this._DonGiaNhap = value;
					this.SendPropertyChanged("DonGiaNhap");
					this.OnDonGiaNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HangHoa_CTPhieuNhap", Storage="_HangHoa", ThisKey="MaHang", OtherKey="MaHang", IsForeignKey=true)]
		public HangHoa HangHoa
		{
			get
			{
				return this._HangHoa.Entity;
			}
			set
			{
				HangHoa previousValue = this._HangHoa.Entity;
				if (((previousValue != value) 
							|| (this._HangHoa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HangHoa.Entity = null;
						previousValue.CTPhieuNhaps.Remove(this);
					}
					this._HangHoa.Entity = value;
					if ((value != null))
					{
						value.CTPhieuNhaps.Add(this);
						this._MaHang = value.MaHang;
					}
					else
					{
						this._MaHang = default(string);
					}
					this.SendPropertyChanged("HangHoa");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuNhapHang_CTPhieuNhap", Storage="_PhieuNhapHang", ThisKey="SoPhieuNhap", OtherKey="SoPhieuNhap", IsForeignKey=true)]
		public PhieuNhapHang PhieuNhapHang
		{
			get
			{
				return this._PhieuNhapHang.Entity;
			}
			set
			{
				PhieuNhapHang previousValue = this._PhieuNhapHang.Entity;
				if (((previousValue != value) 
							|| (this._PhieuNhapHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhieuNhapHang.Entity = null;
						previousValue.CTPhieuNhaps.Remove(this);
					}
					this._PhieuNhapHang.Entity = value;
					if ((value != null))
					{
						value.CTPhieuNhaps.Add(this);
						this._SoPhieuNhap = value.SoPhieuNhap;
					}
					else
					{
						this._SoPhieuNhap = default(int);
					}
					this.SendPropertyChanged("PhieuNhapHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhieuXuatHang")]
	public partial class PhieuXuatHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SoPhieuXuat;
		
		private System.Nullable<System.DateTime> _NgayTaoPXH;
		
		private string _MaNV;
		
		private string _TrangThai;
		
		private EntitySet<CTPhieuXuatHang> _CTPhieuXuatHangs;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSoPhieuXuatChanging(int value);
    partial void OnSoPhieuXuatChanged();
    partial void OnNgayTaoPXHChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTaoPXHChanged();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnTrangThaiChanging(string value);
    partial void OnTrangThaiChanged();
    #endregion
		
		public PhieuXuatHang()
		{
			this._CTPhieuXuatHangs = new EntitySet<CTPhieuXuatHang>(new Action<CTPhieuXuatHang>(this.attach_CTPhieuXuatHangs), new Action<CTPhieuXuatHang>(this.detach_CTPhieuXuatHangs));
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoPhieuXuat", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SoPhieuXuat
		{
			get
			{
				return this._SoPhieuXuat;
			}
			set
			{
				if ((this._SoPhieuXuat != value))
				{
					this.OnSoPhieuXuatChanging(value);
					this.SendPropertyChanging();
					this._SoPhieuXuat = value;
					this.SendPropertyChanged("SoPhieuXuat");
					this.OnSoPhieuXuatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTaoPXH", DbType="Date")]
		public System.Nullable<System.DateTime> NgayTaoPXH
		{
			get
			{
				return this._NgayTaoPXH;
			}
			set
			{
				if ((this._NgayTaoPXH != value))
				{
					this.OnNgayTaoPXHChanging(value);
					this.SendPropertyChanging();
					this._NgayTaoPXH = value;
					this.SendPropertyChanged("NgayTaoPXH");
					this.OnNgayTaoPXHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="NVarChar(50)")]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="NVarChar(50)")]
		public string TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuXuatHang_CTPhieuXuatHang", Storage="_CTPhieuXuatHangs", ThisKey="SoPhieuXuat", OtherKey="SoPhieuXuat")]
		public EntitySet<CTPhieuXuatHang> CTPhieuXuatHangs
		{
			get
			{
				return this._CTPhieuXuatHangs;
			}
			set
			{
				this._CTPhieuXuatHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_PhieuXuatHang", Storage="_NhanVien", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.PhieuXuatHangs.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.PhieuXuatHangs.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(string);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTPhieuXuatHangs(CTPhieuXuatHang entity)
		{
			this.SendPropertyChanging();
			entity.PhieuXuatHang = this;
		}
		
		private void detach_CTPhieuXuatHangs(CTPhieuXuatHang entity)
		{
			this.SendPropertyChanging();
			entity.PhieuXuatHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTPhieuXuatHang")]
	public partial class CTPhieuXuatHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SoPhieuXuat;
		
		private string _MaHang;
		
		private System.Nullable<double> _SoLuongXuat;
		
		private EntityRef<PhieuXuatHang> _PhieuXuatHang;
		
		private EntityRef<HangHoa> _HangHoa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSoPhieuXuatChanging(int value);
    partial void OnSoPhieuXuatChanged();
    partial void OnMaHangChanging(string value);
    partial void OnMaHangChanged();
    partial void OnSoLuongXuatChanging(System.Nullable<double> value);
    partial void OnSoLuongXuatChanged();
    #endregion
		
		public CTPhieuXuatHang()
		{
			this._PhieuXuatHang = default(EntityRef<PhieuXuatHang>);
			this._HangHoa = default(EntityRef<HangHoa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoPhieuXuat", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SoPhieuXuat
		{
			get
			{
				return this._SoPhieuXuat;
			}
			set
			{
				if ((this._SoPhieuXuat != value))
				{
					if (this._PhieuXuatHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSoPhieuXuatChanging(value);
					this.SendPropertyChanging();
					this._SoPhieuXuat = value;
					this.SendPropertyChanged("SoPhieuXuat");
					this.OnSoPhieuXuatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHang", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHang
		{
			get
			{
				return this._MaHang;
			}
			set
			{
				if ((this._MaHang != value))
				{
					if (this._HangHoa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHangChanging(value);
					this.SendPropertyChanging();
					this._MaHang = value;
					this.SendPropertyChanged("MaHang");
					this.OnMaHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongXuat", DbType="Float")]
		public System.Nullable<double> SoLuongXuat
		{
			get
			{
				return this._SoLuongXuat;
			}
			set
			{
				if ((this._SoLuongXuat != value))
				{
					this.OnSoLuongXuatChanging(value);
					this.SendPropertyChanging();
					this._SoLuongXuat = value;
					this.SendPropertyChanged("SoLuongXuat");
					this.OnSoLuongXuatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuXuatHang_CTPhieuXuatHang", Storage="_PhieuXuatHang", ThisKey="SoPhieuXuat", OtherKey="SoPhieuXuat", IsForeignKey=true)]
		public PhieuXuatHang PhieuXuatHang
		{
			get
			{
				return this._PhieuXuatHang.Entity;
			}
			set
			{
				PhieuXuatHang previousValue = this._PhieuXuatHang.Entity;
				if (((previousValue != value) 
							|| (this._PhieuXuatHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhieuXuatHang.Entity = null;
						previousValue.CTPhieuXuatHangs.Remove(this);
					}
					this._PhieuXuatHang.Entity = value;
					if ((value != null))
					{
						value.CTPhieuXuatHangs.Add(this);
						this._SoPhieuXuat = value.SoPhieuXuat;
					}
					else
					{
						this._SoPhieuXuat = default(int);
					}
					this.SendPropertyChanged("PhieuXuatHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HangHoa_CTPhieuXuatHang", Storage="_HangHoa", ThisKey="MaHang", OtherKey="MaHang", IsForeignKey=true)]
		public HangHoa HangHoa
		{
			get
			{
				return this._HangHoa.Entity;
			}
			set
			{
				HangHoa previousValue = this._HangHoa.Entity;
				if (((previousValue != value) 
							|| (this._HangHoa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HangHoa.Entity = null;
						previousValue.CTPhieuXuatHangs.Remove(this);
					}
					this._HangHoa.Entity = value;
					if ((value != null))
					{
						value.CTPhieuXuatHangs.Add(this);
						this._MaHang = value.MaHang;
					}
					else
					{
						this._MaHang = default(string);
					}
					this.SendPropertyChanged("HangHoa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTHoaDonBanHang")]
	public partial class CTHoaDonBanHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHang;
		
		private string _SoHoaDon;
		
		private System.Nullable<double> _SoLuong;
		
		private System.Nullable<double> _ThanhTien;
		
		private EntityRef<HangHoa> _HangHoa;
		
		private EntityRef<HoaDonBanHang> _HoaDonBanHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHangChanging(string value);
    partial void OnMaHangChanged();
    partial void OnSoHoaDonChanging(string value);
    partial void OnSoHoaDonChanged();
    partial void OnSoLuongChanging(System.Nullable<double> value);
    partial void OnSoLuongChanged();
    partial void OnThanhTienChanging(System.Nullable<double> value);
    partial void OnThanhTienChanged();
    #endregion
		
		public CTHoaDonBanHang()
		{
			this._HangHoa = default(EntityRef<HangHoa>);
			this._HoaDonBanHang = default(EntityRef<HoaDonBanHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHang", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHang
		{
			get
			{
				return this._MaHang;
			}
			set
			{
				if ((this._MaHang != value))
				{
					if (this._HangHoa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHangChanging(value);
					this.SendPropertyChanging();
					this._MaHang = value;
					this.SendPropertyChanged("MaHang");
					this.OnMaHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoHoaDon", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SoHoaDon
		{
			get
			{
				return this._SoHoaDon;
			}
			set
			{
				if ((this._SoHoaDon != value))
				{
					if (this._HoaDonBanHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSoHoaDonChanging(value);
					this.SendPropertyChanging();
					this._SoHoaDon = value;
					this.SendPropertyChanged("SoHoaDon");
					this.OnSoHoaDonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Float")]
		public System.Nullable<double> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhTien", DbType="Float")]
		public System.Nullable<double> ThanhTien
		{
			get
			{
				return this._ThanhTien;
			}
			set
			{
				if ((this._ThanhTien != value))
				{
					this.OnThanhTienChanging(value);
					this.SendPropertyChanging();
					this._ThanhTien = value;
					this.SendPropertyChanged("ThanhTien");
					this.OnThanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HangHoa_CTHoaDonBanHang", Storage="_HangHoa", ThisKey="MaHang", OtherKey="MaHang", IsForeignKey=true)]
		public HangHoa HangHoa
		{
			get
			{
				return this._HangHoa.Entity;
			}
			set
			{
				HangHoa previousValue = this._HangHoa.Entity;
				if (((previousValue != value) 
							|| (this._HangHoa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HangHoa.Entity = null;
						previousValue.CTHoaDonBanHangs.Remove(this);
					}
					this._HangHoa.Entity = value;
					if ((value != null))
					{
						value.CTHoaDonBanHangs.Add(this);
						this._MaHang = value.MaHang;
					}
					else
					{
						this._MaHang = default(string);
					}
					this.SendPropertyChanged("HangHoa");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDonBanHang_CTHoaDonBanHang", Storage="_HoaDonBanHang", ThisKey="SoHoaDon", OtherKey="SoHoaDon", IsForeignKey=true)]
		public HoaDonBanHang HoaDonBanHang
		{
			get
			{
				return this._HoaDonBanHang.Entity;
			}
			set
			{
				HoaDonBanHang previousValue = this._HoaDonBanHang.Entity;
				if (((previousValue != value) 
							|| (this._HoaDonBanHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HoaDonBanHang.Entity = null;
						previousValue.CTHoaDonBanHangs.Remove(this);
					}
					this._HoaDonBanHang.Entity = value;
					if ((value != null))
					{
						value.CTHoaDonBanHangs.Add(this);
						this._SoHoaDon = value.SoHoaDon;
					}
					else
					{
						this._SoHoaDon = default(string);
					}
					this.SendPropertyChanged("HoaDonBanHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DangNhap")]
	public partial class DangNhap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TaiKhoan;
		
		private string _MatKhau;
		
		private string _MaNV;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTaiKhoanChanging(string value);
    partial void OnTaiKhoanChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    #endregion
		
		public DangNhap()
		{
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaiKhoan", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TaiKhoan
		{
			get
			{
				return this._TaiKhoan;
			}
			set
			{
				if ((this._TaiKhoan != value))
				{
					this.OnTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._TaiKhoan = value;
					this.SendPropertyChanged("TaiKhoan");
					this.OnTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="NVarChar(50)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="NVarChar(50)")]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_DangNhap", Storage="_NhanVien", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.DangNhaps.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.DangNhaps.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(string);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HangHoa")]
	public partial class HangHoa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHang;
		
		private string _TenHang;
		
		private string _DVT;
		
		private System.Nullable<double> _DonGia;
		
		private System.Nullable<System.DateTime> _NgaySX;
		
		private System.Nullable<System.DateTime> _HSD;
		
		private System.Nullable<double> _SoLuongTon;
		
		private string _MaLoai;
		
		private string _MaNCC;
		
		private EntitySet<CTPhieuNhap> _CTPhieuNhaps;
		
		private EntitySet<CTPhieuXuatHang> _CTPhieuXuatHangs;
		
		private EntitySet<CTHoaDonBanHang> _CTHoaDonBanHangs;
		
		private EntityRef<LoaiHangHoa> _LoaiHangHoa;
		
		private EntityRef<NhaCungCap> _NhaCungCap;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHangChanging(string value);
    partial void OnMaHangChanged();
    partial void OnTenHangChanging(string value);
    partial void OnTenHangChanged();
    partial void OnDVTChanging(string value);
    partial void OnDVTChanged();
    partial void OnDonGiaChanging(System.Nullable<double> value);
    partial void OnDonGiaChanged();
    partial void OnNgaySXChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySXChanged();
    partial void OnHSDChanging(System.Nullable<System.DateTime> value);
    partial void OnHSDChanged();
    partial void OnSoLuongTonChanging(System.Nullable<double> value);
    partial void OnSoLuongTonChanged();
    partial void OnMaLoaiChanging(string value);
    partial void OnMaLoaiChanged();
    partial void OnMaNCCChanging(string value);
    partial void OnMaNCCChanged();
    #endregion
		
		public HangHoa()
		{
			this._CTPhieuNhaps = new EntitySet<CTPhieuNhap>(new Action<CTPhieuNhap>(this.attach_CTPhieuNhaps), new Action<CTPhieuNhap>(this.detach_CTPhieuNhaps));
			this._CTPhieuXuatHangs = new EntitySet<CTPhieuXuatHang>(new Action<CTPhieuXuatHang>(this.attach_CTPhieuXuatHangs), new Action<CTPhieuXuatHang>(this.detach_CTPhieuXuatHangs));
			this._CTHoaDonBanHangs = new EntitySet<CTHoaDonBanHang>(new Action<CTHoaDonBanHang>(this.attach_CTHoaDonBanHangs), new Action<CTHoaDonBanHang>(this.detach_CTHoaDonBanHangs));
			this._LoaiHangHoa = default(EntityRef<LoaiHangHoa>);
			this._NhaCungCap = default(EntityRef<NhaCungCap>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHang", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHang
		{
			get
			{
				return this._MaHang;
			}
			set
			{
				if ((this._MaHang != value))
				{
					this.OnMaHangChanging(value);
					this.SendPropertyChanging();
					this._MaHang = value;
					this.SendPropertyChanged("MaHang");
					this.OnMaHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenHang", DbType="NVarChar(50)")]
		public string TenHang
		{
			get
			{
				return this._TenHang;
			}
			set
			{
				if ((this._TenHang != value))
				{
					this.OnTenHangChanging(value);
					this.SendPropertyChanging();
					this._TenHang = value;
					this.SendPropertyChanged("TenHang");
					this.OnTenHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DVT", DbType="NVarChar(50)")]
		public string DVT
		{
			get
			{
				return this._DVT;
			}
			set
			{
				if ((this._DVT != value))
				{
					this.OnDVTChanging(value);
					this.SendPropertyChanging();
					this._DVT = value;
					this.SendPropertyChanged("DVT");
					this.OnDVTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Float")]
		public System.Nullable<double> DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySX", DbType="Date")]
		public System.Nullable<System.DateTime> NgaySX
		{
			get
			{
				return this._NgaySX;
			}
			set
			{
				if ((this._NgaySX != value))
				{
					this.OnNgaySXChanging(value);
					this.SendPropertyChanging();
					this._NgaySX = value;
					this.SendPropertyChanged("NgaySX");
					this.OnNgaySXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HSD", DbType="Date")]
		public System.Nullable<System.DateTime> HSD
		{
			get
			{
				return this._HSD;
			}
			set
			{
				if ((this._HSD != value))
				{
					this.OnHSDChanging(value);
					this.SendPropertyChanging();
					this._HSD = value;
					this.SendPropertyChanged("HSD");
					this.OnHSDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongTon", DbType="Float")]
		public System.Nullable<double> SoLuongTon
		{
			get
			{
				return this._SoLuongTon;
			}
			set
			{
				if ((this._SoLuongTon != value))
				{
					this.OnSoLuongTonChanging(value);
					this.SendPropertyChanging();
					this._SoLuongTon = value;
					this.SendPropertyChanged("SoLuongTon");
					this.OnSoLuongTonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoai", DbType="NVarChar(50)")]
		public string MaLoai
		{
			get
			{
				return this._MaLoai;
			}
			set
			{
				if ((this._MaLoai != value))
				{
					if (this._LoaiHangHoa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaLoai = value;
					this.SendPropertyChanged("MaLoai");
					this.OnMaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNCC", DbType="NVarChar(50)")]
		public string MaNCC
		{
			get
			{
				return this._MaNCC;
			}
			set
			{
				if ((this._MaNCC != value))
				{
					if (this._NhaCungCap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNCCChanging(value);
					this.SendPropertyChanging();
					this._MaNCC = value;
					this.SendPropertyChanged("MaNCC");
					this.OnMaNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HangHoa_CTPhieuNhap", Storage="_CTPhieuNhaps", ThisKey="MaHang", OtherKey="MaHang")]
		public EntitySet<CTPhieuNhap> CTPhieuNhaps
		{
			get
			{
				return this._CTPhieuNhaps;
			}
			set
			{
				this._CTPhieuNhaps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HangHoa_CTPhieuXuatHang", Storage="_CTPhieuXuatHangs", ThisKey="MaHang", OtherKey="MaHang")]
		public EntitySet<CTPhieuXuatHang> CTPhieuXuatHangs
		{
			get
			{
				return this._CTPhieuXuatHangs;
			}
			set
			{
				this._CTPhieuXuatHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HangHoa_CTHoaDonBanHang", Storage="_CTHoaDonBanHangs", ThisKey="MaHang", OtherKey="MaHang")]
		public EntitySet<CTHoaDonBanHang> CTHoaDonBanHangs
		{
			get
			{
				return this._CTHoaDonBanHangs;
			}
			set
			{
				this._CTHoaDonBanHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiHangHoa_HangHoa", Storage="_LoaiHangHoa", ThisKey="MaLoai", OtherKey="MaLoai", IsForeignKey=true)]
		public LoaiHangHoa LoaiHangHoa
		{
			get
			{
				return this._LoaiHangHoa.Entity;
			}
			set
			{
				LoaiHangHoa previousValue = this._LoaiHangHoa.Entity;
				if (((previousValue != value) 
							|| (this._LoaiHangHoa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiHangHoa.Entity = null;
						previousValue.HangHoas.Remove(this);
					}
					this._LoaiHangHoa.Entity = value;
					if ((value != null))
					{
						value.HangHoas.Add(this);
						this._MaLoai = value.MaLoai;
					}
					else
					{
						this._MaLoai = default(string);
					}
					this.SendPropertyChanged("LoaiHangHoa");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaCungCap_HangHoa", Storage="_NhaCungCap", ThisKey="MaNCC", OtherKey="MaNCC", IsForeignKey=true)]
		public NhaCungCap NhaCungCap
		{
			get
			{
				return this._NhaCungCap.Entity;
			}
			set
			{
				NhaCungCap previousValue = this._NhaCungCap.Entity;
				if (((previousValue != value) 
							|| (this._NhaCungCap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhaCungCap.Entity = null;
						previousValue.HangHoas.Remove(this);
					}
					this._NhaCungCap.Entity = value;
					if ((value != null))
					{
						value.HangHoas.Add(this);
						this._MaNCC = value.MaNCC;
					}
					else
					{
						this._MaNCC = default(string);
					}
					this.SendPropertyChanged("NhaCungCap");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTPhieuNhaps(CTPhieuNhap entity)
		{
			this.SendPropertyChanging();
			entity.HangHoa = this;
		}
		
		private void detach_CTPhieuNhaps(CTPhieuNhap entity)
		{
			this.SendPropertyChanging();
			entity.HangHoa = null;
		}
		
		private void attach_CTPhieuXuatHangs(CTPhieuXuatHang entity)
		{
			this.SendPropertyChanging();
			entity.HangHoa = this;
		}
		
		private void detach_CTPhieuXuatHangs(CTPhieuXuatHang entity)
		{
			this.SendPropertyChanging();
			entity.HangHoa = null;
		}
		
		private void attach_CTHoaDonBanHangs(CTHoaDonBanHang entity)
		{
			this.SendPropertyChanging();
			entity.HangHoa = this;
		}
		
		private void detach_CTHoaDonBanHangs(CTHoaDonBanHang entity)
		{
			this.SendPropertyChanging();
			entity.HangHoa = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HoaDonBanHang")]
	public partial class HoaDonBanHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SoHoaDon;
		
		private System.Nullable<System.DateTime> _NgayLap;
		
		private System.Nullable<double> _VAT;
		
		private System.Nullable<double> _TongTien;
		
		private string _MaKHTT;
		
		private string _MaNV;
		
		private EntitySet<CTHoaDonBanHang> _CTHoaDonBanHangs;
		
		private EntityRef<KhachHangThanThiet> _KhachHangThanThiet;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSoHoaDonChanging(string value);
    partial void OnSoHoaDonChanged();
    partial void OnNgayLapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayLapChanged();
    partial void OnVATChanging(System.Nullable<double> value);
    partial void OnVATChanged();
    partial void OnTongTienChanging(System.Nullable<double> value);
    partial void OnTongTienChanged();
    partial void OnMaKHTTChanging(string value);
    partial void OnMaKHTTChanged();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    #endregion
		
		public HoaDonBanHang()
		{
			this._CTHoaDonBanHangs = new EntitySet<CTHoaDonBanHang>(new Action<CTHoaDonBanHang>(this.attach_CTHoaDonBanHangs), new Action<CTHoaDonBanHang>(this.detach_CTHoaDonBanHangs));
			this._KhachHangThanThiet = default(EntityRef<KhachHangThanThiet>);
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoHoaDon", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SoHoaDon
		{
			get
			{
				return this._SoHoaDon;
			}
			set
			{
				if ((this._SoHoaDon != value))
				{
					this.OnSoHoaDonChanging(value);
					this.SendPropertyChanging();
					this._SoHoaDon = value;
					this.SendPropertyChanged("SoHoaDon");
					this.OnSoHoaDonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayLap", DbType="Date")]
		public System.Nullable<System.DateTime> NgayLap
		{
			get
			{
				return this._NgayLap;
			}
			set
			{
				if ((this._NgayLap != value))
				{
					this.OnNgayLapChanging(value);
					this.SendPropertyChanging();
					this._NgayLap = value;
					this.SendPropertyChanged("NgayLap");
					this.OnNgayLapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VAT", DbType="Float")]
		public System.Nullable<double> VAT
		{
			get
			{
				return this._VAT;
			}
			set
			{
				if ((this._VAT != value))
				{
					this.OnVATChanging(value);
					this.SendPropertyChanging();
					this._VAT = value;
					this.SendPropertyChanged("VAT");
					this.OnVATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Float")]
		public System.Nullable<double> TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKHTT", DbType="NVarChar(50)")]
		public string MaKHTT
		{
			get
			{
				return this._MaKHTT;
			}
			set
			{
				if ((this._MaKHTT != value))
				{
					if (this._KhachHangThanThiet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKHTTChanging(value);
					this.SendPropertyChanging();
					this._MaKHTT = value;
					this.SendPropertyChanged("MaKHTT");
					this.OnMaKHTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="NVarChar(50)")]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDonBanHang_CTHoaDonBanHang", Storage="_CTHoaDonBanHangs", ThisKey="SoHoaDon", OtherKey="SoHoaDon")]
		public EntitySet<CTHoaDonBanHang> CTHoaDonBanHangs
		{
			get
			{
				return this._CTHoaDonBanHangs;
			}
			set
			{
				this._CTHoaDonBanHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHangThanThiet_HoaDonBanHang", Storage="_KhachHangThanThiet", ThisKey="MaKHTT", OtherKey="MaThe", IsForeignKey=true)]
		public KhachHangThanThiet KhachHangThanThiet
		{
			get
			{
				return this._KhachHangThanThiet.Entity;
			}
			set
			{
				KhachHangThanThiet previousValue = this._KhachHangThanThiet.Entity;
				if (((previousValue != value) 
							|| (this._KhachHangThanThiet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHangThanThiet.Entity = null;
						previousValue.HoaDonBanHangs.Remove(this);
					}
					this._KhachHangThanThiet.Entity = value;
					if ((value != null))
					{
						value.HoaDonBanHangs.Add(this);
						this._MaKHTT = value.MaThe;
					}
					else
					{
						this._MaKHTT = default(string);
					}
					this.SendPropertyChanged("KhachHangThanThiet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_HoaDonBanHang", Storage="_NhanVien", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.HoaDonBanHangs.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.HoaDonBanHangs.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(string);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTHoaDonBanHangs(CTHoaDonBanHang entity)
		{
			this.SendPropertyChanging();
			entity.HoaDonBanHang = this;
		}
		
		private void detach_CTHoaDonBanHangs(CTHoaDonBanHang entity)
		{
			this.SendPropertyChanging();
			entity.HoaDonBanHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachHangThanThiet")]
	public partial class KhachHangThanThiet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaThe;
		
		private string _HoTen;
		
		private System.Nullable<System.DateTime> _NgaySinhKH;
		
		private string _SDTKH;
		
		private string _DiaChiKH;
		
		private System.Nullable<double> _Diem;
		
		private EntitySet<HoaDonBanHang> _HoaDonBanHangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTheChanging(string value);
    partial void OnMaTheChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnNgaySinhKHChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhKHChanged();
    partial void OnSDTKHChanging(string value);
    partial void OnSDTKHChanged();
    partial void OnDiaChiKHChanging(string value);
    partial void OnDiaChiKHChanged();
    partial void OnDiemChanging(System.Nullable<double> value);
    partial void OnDiemChanged();
    #endregion
		
		public KhachHangThanThiet()
		{
			this._HoaDonBanHangs = new EntitySet<HoaDonBanHang>(new Action<HoaDonBanHang>(this.attach_HoaDonBanHangs), new Action<HoaDonBanHang>(this.detach_HoaDonBanHangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThe", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaThe
		{
			get
			{
				return this._MaThe;
			}
			set
			{
				if ((this._MaThe != value))
				{
					this.OnMaTheChanging(value);
					this.SendPropertyChanging();
					this._MaThe = value;
					this.SendPropertyChanged("MaThe");
					this.OnMaTheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinhKH", DbType="Date")]
		public System.Nullable<System.DateTime> NgaySinhKH
		{
			get
			{
				return this._NgaySinhKH;
			}
			set
			{
				if ((this._NgaySinhKH != value))
				{
					this.OnNgaySinhKHChanging(value);
					this.SendPropertyChanging();
					this._NgaySinhKH = value;
					this.SendPropertyChanged("NgaySinhKH");
					this.OnNgaySinhKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDTKH", DbType="NVarChar(50)")]
		public string SDTKH
		{
			get
			{
				return this._SDTKH;
			}
			set
			{
				if ((this._SDTKH != value))
				{
					this.OnSDTKHChanging(value);
					this.SendPropertyChanging();
					this._SDTKH = value;
					this.SendPropertyChanged("SDTKH");
					this.OnSDTKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChiKH", DbType="NVarChar(50)")]
		public string DiaChiKH
		{
			get
			{
				return this._DiaChiKH;
			}
			set
			{
				if ((this._DiaChiKH != value))
				{
					this.OnDiaChiKHChanging(value);
					this.SendPropertyChanging();
					this._DiaChiKH = value;
					this.SendPropertyChanged("DiaChiKH");
					this.OnDiaChiKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diem", DbType="Float")]
		public System.Nullable<double> Diem
		{
			get
			{
				return this._Diem;
			}
			set
			{
				if ((this._Diem != value))
				{
					this.OnDiemChanging(value);
					this.SendPropertyChanging();
					this._Diem = value;
					this.SendPropertyChanged("Diem");
					this.OnDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHangThanThiet_HoaDonBanHang", Storage="_HoaDonBanHangs", ThisKey="MaThe", OtherKey="MaKHTT")]
		public EntitySet<HoaDonBanHang> HoaDonBanHangs
		{
			get
			{
				return this._HoaDonBanHangs;
			}
			set
			{
				this._HoaDonBanHangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HoaDonBanHangs(HoaDonBanHang entity)
		{
			this.SendPropertyChanging();
			entity.KhachHangThanThiet = this;
		}
		
		private void detach_HoaDonBanHangs(HoaDonBanHang entity)
		{
			this.SendPropertyChanging();
			entity.KhachHangThanThiet = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiHangHoa")]
	public partial class LoaiHangHoa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLoai;
		
		private string _TenLoai;
		
		private EntitySet<HangHoa> _HangHoas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiChanging(string value);
    partial void OnMaLoaiChanged();
    partial void OnTenLoaiChanging(string value);
    partial void OnTenLoaiChanged();
    #endregion
		
		public LoaiHangHoa()
		{
			this._HangHoas = new EntitySet<HangHoa>(new Action<HangHoa>(this.attach_HangHoas), new Action<HangHoa>(this.detach_HangHoas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoai", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLoai
		{
			get
			{
				return this._MaLoai;
			}
			set
			{
				if ((this._MaLoai != value))
				{
					this.OnMaLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaLoai = value;
					this.SendPropertyChanged("MaLoai");
					this.OnMaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoai", DbType="NVarChar(50)")]
		public string TenLoai
		{
			get
			{
				return this._TenLoai;
			}
			set
			{
				if ((this._TenLoai != value))
				{
					this.OnTenLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenLoai = value;
					this.SendPropertyChanged("TenLoai");
					this.OnTenLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiHangHoa_HangHoa", Storage="_HangHoas", ThisKey="MaLoai", OtherKey="MaLoai")]
		public EntitySet<HangHoa> HangHoas
		{
			get
			{
				return this._HangHoas;
			}
			set
			{
				this._HangHoas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HangHoas(HangHoa entity)
		{
			this.SendPropertyChanging();
			entity.LoaiHangHoa = this;
		}
		
		private void detach_HangHoas(HangHoa entity)
		{
			this.SendPropertyChanging();
			entity.LoaiHangHoa = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhaCungCap")]
	public partial class NhaCungCap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNCC;
		
		private string _TenNCC;
		
		private string _DiaChiNCC;
		
		private string _SDTNCC;
		
		private EntitySet<HangHoa> _HangHoas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNCCChanging(string value);
    partial void OnMaNCCChanged();
    partial void OnTenNCCChanging(string value);
    partial void OnTenNCCChanged();
    partial void OnDiaChiNCCChanging(string value);
    partial void OnDiaChiNCCChanged();
    partial void OnSDTNCCChanging(string value);
    partial void OnSDTNCCChanged();
    #endregion
		
		public NhaCungCap()
		{
			this._HangHoas = new EntitySet<HangHoa>(new Action<HangHoa>(this.attach_HangHoas), new Action<HangHoa>(this.detach_HangHoas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNCC", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNCC
		{
			get
			{
				return this._MaNCC;
			}
			set
			{
				if ((this._MaNCC != value))
				{
					this.OnMaNCCChanging(value);
					this.SendPropertyChanging();
					this._MaNCC = value;
					this.SendPropertyChanged("MaNCC");
					this.OnMaNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNCC", DbType="NVarChar(50)")]
		public string TenNCC
		{
			get
			{
				return this._TenNCC;
			}
			set
			{
				if ((this._TenNCC != value))
				{
					this.OnTenNCCChanging(value);
					this.SendPropertyChanging();
					this._TenNCC = value;
					this.SendPropertyChanged("TenNCC");
					this.OnTenNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChiNCC", DbType="NVarChar(50)")]
		public string DiaChiNCC
		{
			get
			{
				return this._DiaChiNCC;
			}
			set
			{
				if ((this._DiaChiNCC != value))
				{
					this.OnDiaChiNCCChanging(value);
					this.SendPropertyChanging();
					this._DiaChiNCC = value;
					this.SendPropertyChanged("DiaChiNCC");
					this.OnDiaChiNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDTNCC", DbType="NVarChar(50)")]
		public string SDTNCC
		{
			get
			{
				return this._SDTNCC;
			}
			set
			{
				if ((this._SDTNCC != value))
				{
					this.OnSDTNCCChanging(value);
					this.SendPropertyChanging();
					this._SDTNCC = value;
					this.SendPropertyChanged("SDTNCC");
					this.OnSDTNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaCungCap_HangHoa", Storage="_HangHoas", ThisKey="MaNCC", OtherKey="MaNCC")]
		public EntitySet<HangHoa> HangHoas
		{
			get
			{
				return this._HangHoas;
			}
			set
			{
				this._HangHoas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HangHoas(HangHoa entity)
		{
			this.SendPropertyChanging();
			entity.NhaCungCap = this;
		}
		
		private void detach_HangHoas(HangHoa entity)
		{
			this.SendPropertyChanging();
			entity.NhaCungCap = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNV;
		
		private string _HoTenNV;
		
		private System.Nullable<System.DateTime> _NgaySinhNV;
		
		private string _ChucVu;
		
		private System.Nullable<double> _Luong;
		
		private string _SDTNV;
		
		private string _DiaChiNv;
		
		private EntitySet<PhieuXuatHang> _PhieuXuatHangs;
		
		private EntitySet<DangNhap> _DangNhaps;
		
		private EntitySet<HoaDonBanHang> _HoaDonBanHangs;
		
		private EntitySet<PhieuNhapHang> _PhieuNhapHangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnHoTenNVChanging(string value);
    partial void OnHoTenNVChanged();
    partial void OnNgaySinhNVChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhNVChanged();
    partial void OnChucVuChanging(string value);
    partial void OnChucVuChanged();
    partial void OnLuongChanging(System.Nullable<double> value);
    partial void OnLuongChanged();
    partial void OnSDTNVChanging(string value);
    partial void OnSDTNVChanged();
    partial void OnDiaChiNvChanging(string value);
    partial void OnDiaChiNvChanged();
    #endregion
		
		public NhanVien()
		{
			this._PhieuXuatHangs = new EntitySet<PhieuXuatHang>(new Action<PhieuXuatHang>(this.attach_PhieuXuatHangs), new Action<PhieuXuatHang>(this.detach_PhieuXuatHangs));
			this._DangNhaps = new EntitySet<DangNhap>(new Action<DangNhap>(this.attach_DangNhaps), new Action<DangNhap>(this.detach_DangNhaps));
			this._HoaDonBanHangs = new EntitySet<HoaDonBanHang>(new Action<HoaDonBanHang>(this.attach_HoaDonBanHangs), new Action<HoaDonBanHang>(this.detach_HoaDonBanHangs));
			this._PhieuNhapHangs = new EntitySet<PhieuNhapHang>(new Action<PhieuNhapHang>(this.attach_PhieuNhapHangs), new Action<PhieuNhapHang>(this.detach_PhieuNhapHangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTenNV", DbType="NVarChar(50)")]
		public string HoTenNV
		{
			get
			{
				return this._HoTenNV;
			}
			set
			{
				if ((this._HoTenNV != value))
				{
					this.OnHoTenNVChanging(value);
					this.SendPropertyChanging();
					this._HoTenNV = value;
					this.SendPropertyChanged("HoTenNV");
					this.OnHoTenNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinhNV", DbType="Date")]
		public System.Nullable<System.DateTime> NgaySinhNV
		{
			get
			{
				return this._NgaySinhNV;
			}
			set
			{
				if ((this._NgaySinhNV != value))
				{
					this.OnNgaySinhNVChanging(value);
					this.SendPropertyChanging();
					this._NgaySinhNV = value;
					this.SendPropertyChanged("NgaySinhNV");
					this.OnNgaySinhNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChucVu", DbType="NVarChar(50)")]
		public string ChucVu
		{
			get
			{
				return this._ChucVu;
			}
			set
			{
				if ((this._ChucVu != value))
				{
					this.OnChucVuChanging(value);
					this.SendPropertyChanging();
					this._ChucVu = value;
					this.SendPropertyChanged("ChucVu");
					this.OnChucVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Luong", DbType="Float")]
		public System.Nullable<double> Luong
		{
			get
			{
				return this._Luong;
			}
			set
			{
				if ((this._Luong != value))
				{
					this.OnLuongChanging(value);
					this.SendPropertyChanging();
					this._Luong = value;
					this.SendPropertyChanged("Luong");
					this.OnLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDTNV", DbType="NVarChar(50)")]
		public string SDTNV
		{
			get
			{
				return this._SDTNV;
			}
			set
			{
				if ((this._SDTNV != value))
				{
					this.OnSDTNVChanging(value);
					this.SendPropertyChanging();
					this._SDTNV = value;
					this.SendPropertyChanged("SDTNV");
					this.OnSDTNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChiNv", DbType="NVarChar(50)")]
		public string DiaChiNv
		{
			get
			{
				return this._DiaChiNv;
			}
			set
			{
				if ((this._DiaChiNv != value))
				{
					this.OnDiaChiNvChanging(value);
					this.SendPropertyChanging();
					this._DiaChiNv = value;
					this.SendPropertyChanged("DiaChiNv");
					this.OnDiaChiNvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_PhieuXuatHang", Storage="_PhieuXuatHangs", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<PhieuXuatHang> PhieuXuatHangs
		{
			get
			{
				return this._PhieuXuatHangs;
			}
			set
			{
				this._PhieuXuatHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_DangNhap", Storage="_DangNhaps", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<DangNhap> DangNhaps
		{
			get
			{
				return this._DangNhaps;
			}
			set
			{
				this._DangNhaps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_HoaDonBanHang", Storage="_HoaDonBanHangs", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<HoaDonBanHang> HoaDonBanHangs
		{
			get
			{
				return this._HoaDonBanHangs;
			}
			set
			{
				this._HoaDonBanHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_PhieuNhapHang", Storage="_PhieuNhapHangs", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<PhieuNhapHang> PhieuNhapHangs
		{
			get
			{
				return this._PhieuNhapHangs;
			}
			set
			{
				this._PhieuNhapHangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhieuXuatHangs(PhieuXuatHang entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_PhieuXuatHangs(PhieuXuatHang entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
		
		private void attach_DangNhaps(DangNhap entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_DangNhaps(DangNhap entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
		
		private void attach_HoaDonBanHangs(HoaDonBanHang entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_HoaDonBanHangs(HoaDonBanHang entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
		
		private void attach_PhieuNhapHangs(PhieuNhapHang entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_PhieuNhapHangs(PhieuNhapHang entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhieuNhapHang")]
	public partial class PhieuNhapHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SoPhieuNhap;
		
		private System.Nullable<System.DateTime> _NgayTaoPNH;
		
		private string _MaNV;
		
		private string _TrangThai;
		
		private EntitySet<CTPhieuNhap> _CTPhieuNhaps;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSoPhieuNhapChanging(int value);
    partial void OnSoPhieuNhapChanged();
    partial void OnNgayTaoPNHChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTaoPNHChanged();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnTrangThaiChanging(string value);
    partial void OnTrangThaiChanged();
    #endregion
		
		public PhieuNhapHang()
		{
			this._CTPhieuNhaps = new EntitySet<CTPhieuNhap>(new Action<CTPhieuNhap>(this.attach_CTPhieuNhaps), new Action<CTPhieuNhap>(this.detach_CTPhieuNhaps));
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoPhieuNhap", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SoPhieuNhap
		{
			get
			{
				return this._SoPhieuNhap;
			}
			set
			{
				if ((this._SoPhieuNhap != value))
				{
					this.OnSoPhieuNhapChanging(value);
					this.SendPropertyChanging();
					this._SoPhieuNhap = value;
					this.SendPropertyChanged("SoPhieuNhap");
					this.OnSoPhieuNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTaoPNH", DbType="Date")]
		public System.Nullable<System.DateTime> NgayTaoPNH
		{
			get
			{
				return this._NgayTaoPNH;
			}
			set
			{
				if ((this._NgayTaoPNH != value))
				{
					this.OnNgayTaoPNHChanging(value);
					this.SendPropertyChanging();
					this._NgayTaoPNH = value;
					this.SendPropertyChanged("NgayTaoPNH");
					this.OnNgayTaoPNHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="NVarChar(50)")]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="NVarChar(50)")]
		public string TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuNhapHang_CTPhieuNhap", Storage="_CTPhieuNhaps", ThisKey="SoPhieuNhap", OtherKey="SoPhieuNhap")]
		public EntitySet<CTPhieuNhap> CTPhieuNhaps
		{
			get
			{
				return this._CTPhieuNhaps;
			}
			set
			{
				this._CTPhieuNhaps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_PhieuNhapHang", Storage="_NhanVien", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.PhieuNhapHangs.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.PhieuNhapHangs.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(string);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTPhieuNhaps(CTPhieuNhap entity)
		{
			this.SendPropertyChanging();
			entity.PhieuNhapHang = this;
		}
		
		private void detach_CTPhieuNhaps(CTPhieuNhap entity)
		{
			this.SendPropertyChanging();
			entity.PhieuNhapHang = null;
		}
	}
}
#pragma warning restore 1591
